<?xml version="1.0" encoding="UTF-8"?>
<!-- Example manager template  

A manager template uses a structure similar to the templates used in Flipper.
When creating a template, it consists of three required parts and one optional.

Managers: A template can contain one or multiple managers, and for each managers:
	InformationState: None or one information state (DefaultRecords) where the manager can update from and read to.
	Template: None or one Flipper template that the manager has to process
	Function: None or more custom made functions that can be called from the manager
	(Optional) Class: The custom classes can be called when creating a custom manager which for example needs a
	connection with an external source or has to read/write data.
		Parameter: Can contain zero or more optional parameters for the call to
		an external class.
	

--> 

<managers>
	<manager id="001" name="InformationManager" interval="1000">
		<class classname="information_functions" path="C:/info_function.jar">
			<parameter name="ip" value="0.0.0.0"/>
			<parameterarray name="datasets">
				<item value="info1.txt"/>
				<item value="info2.txt"/>
				<item value="info3.txt"/>
			</parameterarray>
		</class>
		<informationstate name="infostate">
			<state name="$userstate.intention" value="greeting" override="false"/>
		</informationstate>
		<templates>
			<template id="001" name="information_template" path="C:/example.xsd" />		
		</templates>
		<functions>
			<function id="001" classname="information_functions" path="C:/info_function.jar" /> 
		</functions>
	</manager>


	<manager id="002" name="FeedbackManager" interval="10">
		<class classname="information_functions" path="C:/info_function.jar">
			<parameter name="ip" value="0.0.0.0"/>
			<parameterarray name="datasets">
				<item value="info1.txt"/>
				<item value="info2.txt"/>
				<item value="info3.txt"/>
			</parameterarray>
		</class>
		<informationstate name="infostate">
			<state name="$userstate.intention" value="greeting" override="false"/>
		</informationstate>
		<templates>
			<template id="001" name="information_template" path="C:/example.xsd" />		
		</templates>
		<functions>
			<function id="001" classname="information_functions" path="C:/info_function.jar" /> 
		</functions>
	</manager>
</managers>

